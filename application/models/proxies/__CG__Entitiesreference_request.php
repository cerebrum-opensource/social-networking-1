<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class reference_request extends \Entities\reference_request implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getRequest_for_the_position()
    {
        $this->__load();
        return parent::getRequest_for_the_position();
    }

    public function setRequest_for_the_position($request_for_the_position)
    {
        $this->__load();
        return parent::setRequest_for_the_position($request_for_the_position);
    }

    public function getProvide_for_the_position()
    {
        $this->__load();
        return parent::getProvide_for_the_position();
    }

    public function setProvide_for_the_position($provide_for_the_position)
    {
        $this->__load();
        return parent::setProvide_for_the_position($provide_for_the_position);
    }

    public function getRequested_as()
    {
        $this->__load();
        return parent::getRequested_as();
    }

    public function setRequested_as($requested_as)
    {
        $this->__load();
        return parent::setRequested_as($requested_as);
    }

    public function getProvided_as()
    {
        $this->__load();
        return parent::getProvided_as();
    }

    public function setProvided_as($provided_as)
    {
        $this->__load();
        return parent::setProvided_as($provided_as);
    }

    public function getProvided_at()
    {
        $this->__load();
        return parent::getProvided_at();
    }

    public function setProvided_at($provided_at)
    {
        $this->__load();
        return parent::setProvided_at($provided_at);
    }

    public function getProvider_msg()
    {
        $this->__load();
        return parent::getProvider_msg();
    }

    public function setProvider_msg($provider_msg)
    {
        $this->__load();
        return parent::setProvider_msg($provider_msg);
    }

    public function getRequester_msg()
    {
        $this->__load();
        return parent::getRequester_msg();
    }

    public function setRequester_msg($requester_msg)
    {
        $this->__load();
        return parent::setRequester_msg($requester_msg);
    }

    public function getVisibility_criteria()
    {
        $this->__load();
        return parent::getVisibility_criteria();
    }

    public function setVisibility_criteria($visibility_criteria)
    {
        $this->__load();
        return parent::setVisibility_criteria($visibility_criteria);
    }

    public function getIs_accepted()
    {
        $this->__load();
        return parent::getIs_accepted();
    }

    public function setIs_accepted($is_accepted)
    {
        $this->__load();
        return parent::setIs_accepted($is_accepted);
    }

    public function getDate_from()
    {
        $this->__load();
        return parent::getDate_from();
    }

    public function setDate_from($date_from)
    {
        $this->__load();
        return parent::setDate_from($date_from);
    }

    public function getDate_to()
    {
        $this->__load();
        return parent::getDate_to();
    }

    public function setDate_to($date_to)
    {
        $this->__load();
        return parent::setDate_to($date_to);
    }

    public function getCompany()
    {
        $this->__load();
        return parent::getCompany();
    }

    public function setCompany($company)
    {
        $this->__load();
        return parent::setCompany($company);
    }

    public function getReference_requestRequester_user()
    {
        $this->__load();
        return parent::getReference_requestRequester_user();
    }

    public function setReference_requestRequester_user($reference_requestRequester_user)
    {
        $this->__load();
        return parent::setReference_requestRequester_user($reference_requestRequester_user);
    }

    public function getReference_requestProvider_user()
    {
        $this->__load();
        return parent::getReference_requestProvider_user();
    }

    public function setReference_requestProvider_user($reference_requestProvider_user)
    {
        $this->__load();
        return parent::setReference_requestProvider_user($reference_requestProvider_user);
    }

    public function getCreated_at()
    {
        $this->__load();
        return parent::getCreated_at();
    }

    public function setCreated_at($created_at)
    {
        $this->__load();
        return parent::setCreated_at($created_at);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'request_for_the_position', 'provide_for_the_position', 'requested_as', 'provided_as', 'provided_at', 'provider_msg', 'requester_msg', 'visibility_criteria', 'is_accepted', 'date_from', 'date_to', 'company', 'created_at', 'reference_requestRequester_user', 'reference_requestProvider_user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}