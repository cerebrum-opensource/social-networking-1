<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class notification_settings extends \Entities\notification_settings implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getEmail_on_link_req()
    {
        $this->__load();
        return parent::getEmail_on_link_req();
    }

    public function setEmail_on_link_req($email_on_link_req)
    {
        $this->__load();
        return parent::setEmail_on_link_req($email_on_link_req);
    }

    public function getEmail_on_feedback_req()
    {
        $this->__load();
        return parent::getEmail_on_feedback_req();
    }

    public function setEmail_on_feedback_req($email_on_feedback_req)
    {
        $this->__load();
        return parent::setEmail_on_feedback_req($email_on_feedback_req);
    }

    public function getEmail_on_ref_req()
    {
        $this->__load();
        return parent::getEmail_on_ref_req();
    }

    public function setEmail_on_ref_req($email_on_ref_req)
    {
        $this->__load();
        return parent::setEmail_on_ref_req($email_on_ref_req);
    }

    public function getEmail_on_job_invite()
    {
        $this->__load();
        return parent::getEmail_on_job_invite();
    }

    public function setEmail_on_job_invite($email_on_job_invite)
    {
        $this->__load();
        return parent::setEmail_on_job_invite($email_on_job_invite);
    }

    public function getGeneral_notifications()
    {
        $this->__load();
        return parent::getGeneral_notifications();
    }

    public function setGeneral_notifications($general_notifications)
    {
        $this->__load();
        return parent::setGeneral_notifications($general_notifications);
    }

    public function getIlookUser()
    {
        $this->__load();
        return parent::getIlookUser();
    }

    public function setIlookUser($ilookUser)
    {
        $this->__load();
        return parent::setIlookUser($ilookUser);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'email_on_link_req', 'email_on_feedback_req', 'email_on_ref_req', 'email_on_job_invite', 'general_notifications', 'ilookUser');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}