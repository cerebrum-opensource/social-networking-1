<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class enquiry extends \Entities\enquiry implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getPhone_number()
    {
        $this->__load();
        return parent::getPhone_number();
    }

    public function setPhone_number($phone_number)
    {
        $this->__load();
        return parent::setPhone_number($phone_number);
    }

    public function getSubject()
    {
        $this->__load();
        return parent::getSubject();
    }

    public function setSubject($subject)
    {
        $this->__load();
        return parent::setSubject($subject);
    }

    public function getBody()
    {
        $this->__load();
        return parent::getBody();
    }

    public function setBody($body)
    {
        $this->__load();
        return parent::setBody($body);
    }

    public function getEmail_id()
    {
        $this->__load();
        return parent::getEmail_id();
    }

    public function setEmail_id($email_id)
    {
        $this->__load();
        return parent::setEmail_id($email_id);
    }

    public function getCreated_at()
    {
        $this->__load();
        return parent::getCreated_at();
    }

    public function setCreated_at($created_at)
    {
        $this->__load();
        return parent::setCreated_at($created_at);
    }

    public function getEnquiryAttachment()
    {
        $this->__load();
        return parent::getEnquiryAttachment();
    }

    public function setEnquiryAttachment($enquiryAttachment)
    {
        $this->__load();
        return parent::setEnquiryAttachment($enquiryAttachment);
    }

    public function getIlookUser()
    {
        $this->__load();
        return parent::getIlookUser();
    }

    public function setIlookUser($ilookUser)
    {
        $this->__load();
        return parent::setIlookUser($ilookUser);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'type', 'phone_number', 'subject', 'body', 'email_id', 'created_at', 'enquiryAttachment', 'ilookUser');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}