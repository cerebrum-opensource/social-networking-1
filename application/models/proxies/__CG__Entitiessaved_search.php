<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class saved_search extends \Entities\saved_search implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getSave_search_name()
    {
        $this->__load();
        return parent::getSave_search_name();
    }

    public function setSave_search_name($save_search_name)
    {
        $this->__load();
        return parent::setSave_search_name($save_search_name);
    }

    public function getDate_from()
    {
        $this->__load();
        return parent::getDate_from();
    }

    public function setDate_from($date_from)
    {
        $this->__load();
        return parent::setDate_from($date_from);
    }

    public function getDate_to()
    {
        $this->__load();
        return parent::getDate_to();
    }

    public function setDate_to($date_to)
    {
        $this->__load();
        return parent::setDate_to($date_to);
    }

    public function getJob_title()
    {
        $this->__load();
        return parent::getJob_title();
    }

    public function setJob_title($job_title)
    {
        $this->__load();
        return parent::setJob_title($job_title);
    }

    public function getJobFunction()
    {
        $this->__load();
        return parent::getJobFunction();
    }

    public function setJobFunction($jobFunction)
    {
        $this->__load();
        return parent::setJobFunction($jobFunction);
    }

    public function getCountryRef()
    {
        $this->__load();
        return parent::getCountryRef();
    }

    public function setCountryRef($countryRef)
    {
        $this->__load();
        return parent::setCountryRef($countryRef);
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function setCity($city)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function setState($state)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function getCompany()
    {
        $this->__load();
        return parent::getCompany();
    }

    public function setCompany($company)
    {
        $this->__load();
        return parent::setCompany($company);
    }

    public function getIndustryRef()
    {
        $this->__load();
        return parent::getIndustryRef();
    }

    public function setIndustryRef($industryRef)
    {
        $this->__load();
        return parent::setIndustryRef($industryRef);
    }

    public function getSalaryRange()
    {
        $this->__load();
        return parent::getSalaryRange();
    }

    public function setSalaryRange($salaryRange)
    {
        $this->__load();
        return parent::setSalaryRange($salaryRange);
    }

    public function getJobType()
    {
        $this->__load();
        return parent::getJobType();
    }

    public function setJobType($jobType)
    {
        $this->__load();
        return parent::setJobType($jobType);
    }

    public function getExperieneceLevel()
    {
        $this->__load();
        return parent::getExperieneceLevel();
    }

    public function setExperieneceLevel($experieneceLevel)
    {
        $this->__load();
        return parent::setExperieneceLevel($experieneceLevel);
    }

    public function getRecieveAlerts()
    {
        $this->__load();
        return parent::getRecieveAlerts();
    }

    public function setRecieveAlerts($recieveAlerts)
    {
        $this->__load();
        return parent::setRecieveAlerts($recieveAlerts);
    }

    public function getIlookUser()
    {
        $this->__load();
        return parent::getIlookUser();
    }

    public function setIlookUser($ilookUser)
    {
        $this->__load();
        return parent::setIlookUser($ilookUser);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'save_search_name', 'date_from', 'date_to', 'job_title', 'jobFunction', 'countryRef', 'city', 'state', 'company', 'industryRef', 'salaryRange', 'jobType', 'experieneceLevel', 'recieveAlerts', 'ilookUser');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}