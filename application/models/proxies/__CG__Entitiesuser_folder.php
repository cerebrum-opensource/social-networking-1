<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class user_folder extends \Entities\user_folder implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getUser_foldersMessage_folder()
    {
        $this->__load();
        return parent::getUser_foldersMessage_folder();
    }

    public function setUser_foldersMessage_folder($user_foldersMessage_folder)
    {
        $this->__load();
        return parent::setUser_foldersMessage_folder($user_foldersMessage_folder);
    }

    public function getUser_foldersFolder()
    {
        $this->__load();
        return parent::getUser_foldersFolder();
    }

    public function setUser_foldersFolder($user_foldersFolder)
    {
        $this->__load();
        return parent::setUser_foldersFolder($user_foldersFolder);
    }

    public function getUser_foldersCreatedbyuser()
    {
        $this->__load();
        return parent::getUser_foldersCreatedbyuser();
    }

    public function setUser_foldersCreatedbyuser($user_foldersCreatedbyuser)
    {
        $this->__load();
        return parent::setUser_foldersCreatedbyuser($user_foldersCreatedbyuser);
    }

    public function getUser_foldersDeletedbyUser()
    {
        $this->__load();
        return parent::getUser_foldersDeletedbyUser();
    }

    public function setUser_foldersDeletedbyUser($user_foldersDeletedbyUser)
    {
        $this->__load();
        return parent::setUser_foldersDeletedbyUser($user_foldersDeletedbyUser);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'user_foldersMessage_folder', 'user_foldersFolder', 'user_foldersCreatedbyuser', 'user_foldersDeletedbyUser');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}