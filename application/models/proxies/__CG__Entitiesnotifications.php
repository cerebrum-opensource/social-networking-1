<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class notifications extends \Entities\notifications implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getIf_any_related_photo_path()
    {
        $this->__load();
        return parent::getIf_any_related_photo_path();
    }

    public function setIf_any_related_photo_path($if_any_related_photo_path)
    {
        $this->__load();
        return parent::setIf_any_related_photo_path($if_any_related_photo_path);
    }

    public function getNotification_text()
    {
        $this->__load();
        return parent::getNotification_text();
    }

    public function setNotification_text($notification_text)
    {
        $this->__load();
        return parent::setNotification_text($notification_text);
    }

    public function getIs_read()
    {
        $this->__load();
        return parent::getIs_read();
    }

    public function setIs_read($is_read)
    {
        $this->__load();
        return parent::setIs_read($is_read);
    }

    public function getTime_stamp()
    {
        $this->__load();
        return parent::getTime_stamp();
    }

    public function setTime_stamp($time_stamp)
    {
        $this->__load();
        return parent::setTime_stamp($time_stamp);
    }

    public function getDatee()
    {
        $this->__load();
        return parent::getDatee();
    }

    public function setDatee($datee)
    {
        $this->__load();
        return parent::setDatee($datee);
    }

    public function getWallpost_id()
    {
        $this->__load();
        return parent::getWallpost_id();
    }

    public function setWallpost_id($wallpost_id)
    {
        $this->__load();
        return parent::setWallpost_id($wallpost_id);
    }

    public function getSocialize_photo_id()
    {
        $this->__load();
        return parent::getSocialize_photo_id();
    }

    public function setSocialize_photo_id($socialize_photo_id)
    {
        $this->__load();
        return parent::setSocialize_photo_id($socialize_photo_id);
    }

    public function getSocialize_album_id()
    {
        $this->__load();
        return parent::getSocialize_album_id();
    }

    public function setSocialize_album_id($socialize_album_id)
    {
        $this->__load();
        return parent::setSocialize_album_id($socialize_album_id);
    }

    public function getNotificationType()
    {
        $this->__load();
        return parent::getNotificationType();
    }

    public function setNotificationType($notificationType)
    {
        $this->__load();
        return parent::setNotificationType($notificationType);
    }

    public function getForIlookUser()
    {
        $this->__load();
        return parent::getForIlookUser();
    }

    public function setForIlookUser($forIlookUser)
    {
        $this->__load();
        return parent::setForIlookUser($forIlookUser);
    }

    public function getAboutIlookUser()
    {
        $this->__load();
        return parent::getAboutIlookUser();
    }

    public function setAboutIlookUser($aboutIlookUser)
    {
        $this->__load();
        return parent::setAboutIlookUser($aboutIlookUser);
    }

    public function getIs_seen()
    {
        $this->__load();
        return parent::getIs_seen();
    }

    public function setIs_seen($is_seen)
    {
        $this->__load();
        return parent::setIs_seen($is_seen);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'if_any_related_photo_path', 'notification_text', 'is_read', 'time_stamp', 'datee', 'wallpost_id', 'socialize_photo_id', 'socialize_album_id', 'is_seen', 'notificationType', 'forIlookUser', 'aboutIlookUser');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}